<Window x:Class="myTunes.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:myTunes"
        mc:Ignorable="d"
        Title="myTunes" Height="450" Width="800" Icon="/images/garf.ico">
    <Window.CommandBindings>
        <CommandBinding Command="Play" Executed="PlayCommand_Executed" CanExecute="PlayCommand_CanExecute" />
        <CommandBinding Command="Stop" Executed="StopCommand_Executed" CanExecute="StopCommand_CanExecute" />
    </Window.CommandBindings>
    <Grid>
        <StackPanel>
            <Viewbox Stretch="Uniform">
                <Grid>
                    <ToolBar Height="34" VerticalAlignment="Top" HorizontalAlignment="Left" Width="800">
                        <!-- buttons with images from: https://learn.microsoft.com/en-us/dotnet/desktop/wpf/controls/how-to-create-a-button-that-has-an-image?view=netframeworkdesktop-4.8 -->
                        <Button x:Name="addSongButton" Click="addSongButton_Click" ToolTip="New Song">
                            <Image Source="images/addSong.png" />
                        </Button>
                        <Button x:Name="addPlaylistButton" Click="addPlaylistButton_Click" ToolTip="New Playlist">
                            <Image Source="images/addPlaylist.png" />
                        </Button>
                        <Button x:Name="aboutButton" Click="aboutButton_Click" ToolTip="About">
                            <Image Source="images/info.png" />
                        </Button>
                    </ToolBar>
                </Grid>
            </Viewbox>

            <Viewbox Stretch="Uniform">
                <Grid Width="782" Height="409">
                    <ListBox x:Name="songListBox" Margin="10,10,0,0" SelectionChanged="songListBox_SelectionChanged" Height="364" VerticalAlignment="Top" HorizontalAlignment="Left" Width="170" LayoutUpdated="songListBox_LayoutUpdated" >
                        <!-- Original context menu code, change to a function to dynamically create to handle "All Music" -->
                        <!--<ListBox.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Rename" Click="RenamePlaylist_Click"/>
                                <MenuItem Header="Delete" Click="DeletePlaylist_Click"/>
                            </ContextMenu>
                        </ListBox.ContextMenu>-->
                    </ListBox>

                    <DataGrid x:Name="songDataGrid" AutoGenerateColumns="False" Margin="199,0,22,76" CanUserAddRows="False" IsReadOnly="True" SelectionMode="Single" Height="323" VerticalAlignment="Bottom" LayoutUpdated="songDataGrid_LayoutUpdated">
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding id}" Visibility="Hidden" />
                            <DataGridTextColumn Binding="{Binding title}" Header="Title" />
                            <DataGridTextColumn Binding="{Binding artist}" Header="Artist" />
                            <DataGridTextColumn Binding="{Binding album}" Header="Album" />
                            <DataGridTextColumn Binding="{Binding genre}" Header="Genre" />
                        </DataGrid.Columns>
                    </DataGrid>
                    <Button x:Name="playButton" Content="Play" HorizontalAlignment="Left" Margin="199,0,0,35" Width="100" Height="25" VerticalAlignment="Bottom" Command="Play" />
                    <Button x:Name="stopButton" Content="Stop" HorizontalAlignment="Left" Margin="310,0,0,35" Width="100" Height="25" VerticalAlignment="Bottom" Command="Stop" />
                </Grid>
            </Viewbox>
        </StackPanel>

    </Grid>
</Window>
